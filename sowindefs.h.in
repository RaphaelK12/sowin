/**************************************************************************
 *
 *  This file is part of the Coin SoWin GUI binding library.
 *  Copyright (C) 2000 by Systems in Motion.  All rights reserved.
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public License
 *  version 2.1 as published by the Free Software Foundation.  See the
 *  file LICENSE.LGPL at the root directory of the distribution for
 *  more details.
 *
 *  If you want to use Coin SoWin for applications not compatible with the
 *  LGPL, please contact SIM to aquire a Professional Edition License.
 *
 *  Systems in Motion, Prof Brochs gate 6, N-7030 Trondheim, NORWAY
 *  http://www.sim.no/ support@sim.no Voice: +47 22114160 Fax: +47 22207097
 *
 **************************************************************************/

#ifndef SO@GUI@_INTERNALDEFS_H
#define SO@GUI@_INTERNALDEFS_H

// *************************************************************************

#ifdef __FILE__
#define SO@GUI@_STUB_FILE __FILE__
#else
#define SO@GUI@_STUB_FILE ((char *)0L)
#endif

#ifdef __LINE__
#define SO@GUI@_STUB_LINE __LINE__
#else
#define SO@GUI@_STUB_LINE 0
#endif

#if HAVE_VAR___PRETTY_FUNCTION__
#define SO@GUI@_STUB_FUNC __PRETTY_FUNCTION__
#else
#if HAVE_VAR___FUNCTION__
#define SO@GUI@_STUB_FUNC __FUNCTION__
#else
#define SO@GUI@_STUB_FUNC ((char *)0L)
#endif
#endif

// SO@GUI@_STUB(): this is the method which prints out stub
// information. Used where there is functionality missing.

#include <stdio.h> // _not_null
#include <conio.h> // _cprintf()

// This stupid thing is here to silence some compilers that complain on
// constant if-expressions.
inline int _not_null( const void * arg ) { return (arg != NULL) ? 1 : 0; }

#define SO@GUI@_STUB() \
  do { \
    (void)_cprintf("STUB: functionality not yet completed"); \
    if ( _not_null(SO@GUI@_STUB_FILE) ) { \
      (void)_cprintf(" at %s", SO@GUI@_STUB_FILE); \
      if ( _not_null((void *)SO@GUI@_STUB_LINE) ) \
        (void)_cprintf(":line %u", SO@GUI@_STUB_LINE); \
      if ( _not_null(SO@GUI@_STUB_FUNC) ) \
        (void)_cprintf(":[%s]", SO@GUI@_STUB_FUNC); \
    } \
    (void)_cprintf("\n"); \
  } while (0)

#define SO@GUI@_STUB_ONCE() \
  do { \
    static int first = 1; \
    if ( first ) { \
      first = 0; \
      (void)_cprintf("STUB: functionality not yet completed (first and last warning)"); \
      if ( _not_null(SO@GUI@_STUB_FILE) ) { \
        (void)_cprintf(" at %s", SO@GUI@_STUB_FILE); \
        if ( _not_null((void *)SO@GUI@_STUB_LINE) ) \
          (void)_cprintf(":line %u", SO@GUI@_STUB_LINE); \
        if ( _not_null(SO@GUI@_STUB_FUNC) ) \
          (void)_cprintf(":[%s]", SO@GUI@_STUB_FUNC); \
      } \
      (void)_cprintf("\n"); \
    } \
  } while (0)

/*
  GETTEXT support
*/

#if defined(ENABLE_NLS) && defined(HAVE_GETTEXT)
#include <libintl.h>
#define _(String) dgettext (PACKAGE, String)
#define N_(String) (String)
#else
#define _(String) (String)
#define N_(String) (String)
#define textdomain(Domain)
#define bindtextdomain(Package, Directory)
#endif /* HAVE_GETTEXT && ENABLE_NLS */

// *************************************************************************

#endif // ! SO@GUI@_INTERNALDEFS_H
