# **************************************************************************
# SoWin/configure.in

AC_INIT(src/Inventor/Win/SoWin.h)

# **************************************************************************

AC_PROG_CC
AC_PROG_CPP
AC_PROG_CXX
AC_PROG_CXXCPP
AC_LANG_CPLUSPLUS

SOWIN_MAJOR_VERSION=0
SOWIN_MINOR_VERSION=2
SOWIN_MICRO_VERSION=0
SOWIN_INTERFACE_AGE=0
SOWIN_BINARY_AGE=0
SOWIN_VERSION=$SOWIN_MAJOR_VERSION.$SOWIN_MINOR_VERSION.$SOWIN_MICRO_VERSION

AC_SUBST(SOWIN_MAJOR_VERSION)
AC_SUBST(SOWIN_MINOR_VERSION)
AC_SUBST(SOWIN_MICRO_VERSION)
AC_SUBST(SOWIN_VERSION)
AC_SUBST(SOWIN_INTERFACE_AGE)
AC_SUBST(SOWIN_BINARY_AGE)

LT_RELEASE=$SOWIN_MAJOR_VERSION.$SOWIN_MINOR_VERSION
LT_CURRENT=`expr $SOWIN_MICRO_VERSION - $SOWIN_INTERFACE_AGE`
LT_REVISION=$SOWIN_INTERFACE_AGE
LT_AGE=`expr $SOWIN_BINARY_AGE - $SOWIN_INTERFACE_AGE`
AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

VERSION=$SOWIN_VERSION

AC_DEFINE_UNQUOTED(SOWIN_MAJOR_VERSION, $SOWIN_MAJOR_VERSION)
AC_DEFINE_UNQUOTED(SOWIN_MINOR_VERSION, $SOWIN_MINOR_VERSION)
AC_DEFINE_UNQUOTED(SOWIN_MICRO_VERSION, $SOWIN_MICRO_VERSION)
AC_DEFINE_UNQUOTED(SOWIN_VERSION, "$SOWIN_VERSION")

# **************************************************************************

AC_CANONICAL_SYSTEM

AM_INIT_AUTOMAKE(libSoWin, $SOWIN_VERSION)
AM_CONFIG_HEADER(config.h)

AM_DISABLE_STATIC
AM_MAINTAINER_MODE
AC_PROG_LIBTOOL

SIM_AC_RTTI_SUPPORT
SIM_EXCEPTION_HANDLING
SIM_AC_CHECK_VAR_FUNCTIONNAME
SIM_PROFILING_SUPPORT
SIM_COMPILE_DEBUG(
  [CPPFLAGS="$CPPFLAGS -DSOWIN_DEBUG=1"],
  [CPPFLAGS="$CPPFLAGS -DSOWIN_DEBUG=0"])
SIM_COMPILER_WARNINGS

# **************************************************************************
# Search for and set up stuff we depend on.

# SIM_CHECK_WIN32([
#   SOWIN_EXTRA_CPPFLAGS="$SOWIN_EXTRA_CPPFLAGS $sim_ac_win32_cppflags"
#   SOWIN_EXTRA_LDFLAGS="$SOWIN_EXTRA_LDFLAGS $sim_ac_win32_ldflags"
#   SOWIN_EXTRA_LIBS="$sim_ac_win32_libs $SOWIN_EXTRA_LIBS"
# ])

if test x"${with_inventor+set}" = x"set"; then
  # check for SGI or TGS Open Inventor
  SIM_CHECK_INVENTOR([
    SOWIN_EXTRA_CPPFLAGS="$sim_ac_oiv_cppflags $SOWIN_EXTRA_CPPFLAGS"
    SOWIN_EXTRA_LDFLAGS="$sim_ac_oiv_ldflags $SOWIN_EXTRA_LDFLAGS"
    SOWIN_EXTRA_LIBS="$sim_ac_oiv_wlibs $SOWIN_EXTRA_LIBS"
  ], AC_MSG_ERROR([couldn't compile and link against Open Inventor]))
else
  # check for Coin library and its dependencies
  SIM_AC_HAVE_COIN_IFELSE([
    SOWIN_EXTRA_CPPFLAGS="$SOWIN_EXTRA_CPPFLAGS $sim_ac_coin_cppflags"
    SOWIN_EXTRA_LDFLAGS="$SOWIN_EXTRA_LDFLAGS $sim_ac_coin_ldflags"
    SOWIN_EXTRA_LIBS="$sim_ac_coin_libs $SOWIN_EXTRA_LIBS"
  ], AC_MSG_ERROR(couldn't compile and link against Coin))
fi

# Check for the availability of this node (it is used in the hidden
# line rendering), which is not part of older Inventor implementations.
SIM_AC_HAVE_INVENTOR_NODE(SoPolygonOffset)

CXXFLAGS="$CXXFLAGS -DSOWIN_INTERNAL=1"

# **************************************************************************

# --with-ivexamples is a silent option
sim_ac_want_ivexamples=false
if test x"${with_ivexamples+set}" = x"set"; then
  AC_MSG_CHECKING([for ivexamples directory])
  if test -f ${srcdir}/ivexamples/configure.in; then
    AC_MSG_RESULT([found])
    sim_ac_want_ivexamples=true
  else
    AC_MSG_RESULT([not found])
    AC_MSG_ERROR([can't use '--with-ivexamples' when ivexamples/ doesn't exist])
  fi
fi

sim_ac_static_defaults=true;
AC_ARG_ENABLE(
  [static-defaults],
  AC_HELP_STRING([--disable-static-defaults], [Disable misc. defaults from being statically linked with SoWin]),
  [],
  [sim_ac_static_defaults=false])

if $sim_ac_static_defaults; then
  AC_DEFINE(WITH_STATIC_DEFAULTS,,
    [Define this if you want defaults to be linked into SoWin])
fi

AM_CONDITIONAL(BUILD_EXAMPLES, true)
AM_CONDITIONAL(BUILD_IV_EXAMPLES, $sim_ac_want_ivexamples)

# **************************************************************************
# Variable substitutions for using libSoWin in the generic code.

. ${srcdir}/libconfigvars.sh

AC_SUBST(GUI)
AC_SUBST(Gui)
AC_SUBST(gui)
AC_SUBST(WIDGET)
AC_SUBST(EVENT)
AC_SUBST(COMPONENTHEADER)

# **************************************************************************
# Configure the submodule with the examples.

# sowin-config
AC_SUBST(SOWIN_EXTRA_CPPFLAGS)
AC_SUBST(SOWIN_EXTRA_LDFLAGS)
AC_SUBST(SOWIN_EXTRA_LIBS)

SIM_EXPAND_DIR_VARS

AC_CONFIG_SUBDIRS(data)

# **************************************************************************
# finally generate all the directories, makefiles, autogenerated
# sourcefiles, and config headers.

# AC_CONFIG_PRE_COMMANDS([
test -d src || mkdir src
test -d src/Inventor || mkdir src/Inventor
test -d src/Inventor/Win || mkdir src/Inventor/Win
# ])

AC_OUTPUT([
	Makefile
	sowin-config
	src/Inventor/Win/Makefile
	src/Inventor/Win/devices/Makefile
	src/Inventor/Win/widgets/Makefile
	src/Inventor/Win/viewers/Makefile
], [
	chmod a+x sowin-config
])

echo ""
echo "Now, run 'make install' to build and install So$GUI."
echo ""

# **************************************************************************
